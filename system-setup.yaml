---
- hosts: all
  tasks:
    - name: "Upgrade All Packages"
      pacman:
        update_cache: yes
        upgrade: yes

    - name: "Ensure Useful Packages Installed"
      pacman:
        pkg:
          - vim
          - zsh
          - lsof
          - wget
          - rsync
          - openssh
          - fail2ban
          - docker-compose
          - qemu-guest-agent
      when: ansible_distribution == 'Arch'

    - name: "Ensure Useful Packages Installed"
      zypper:
        name:
          - vim
          - zsh
          - lsof
          - wget
          - rsync
          - openssh
          - fail2ban
          - docker-compose
          - qemu-guest-agent
      update_cache: yes
      when: ansible_distribution == 'OpenSUSE'

    - name: "Copy pacman.conf"
      copy:
        src: /etc/pacman.conf
        dest: /etc/pacman.conf
      when: ansible_connection != 'local' and ansible_distribution == 'Arch'

    - name: "Get Oh-My-ZSH Installer Script"
      get_url:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /root/oh-my-zsh-install.sh
        mode: '0755'
      when: ansible_facts['user_shell'] != '/usr/bin/zsh'

    - name: "Run ZSH Installer"
      command: /root/oh-my-zsh-install.sh --unattended
      when: ansible_facts['user_shell'] != '/usr/bin/zsh'

    - name: "Set root shell to ZSH"
      user:
        name: root
        shell: /usr/bin/zsh
      when: ansible_facts['user_shell'] != '/usr/bin/zsh'

    - name: "Check if Oh-My-ZSH Installer Still Present"
      stat:
        path: /root/oh-my-zsh-install.sh
      register: oh_my_zsh_installer
      changed_when: False

    - name: "Cleanup Oh-My-ZSH Installer Script"
      file:
        path: /root/oh-my-zsh-install.sh
        state: absent
      when: oh_my_zsh_installer.stat.exists

    - name: "Install spaceship ZSH Theme"
      git:
        repo: 'https://github.com/denysdovhan/spaceship-prompt.git'
        dest: /root/.oh-my-zsh/custom/themes/spaceship-prompt
        version: master
        depth: 1

    - name: "Symlink for spaceship ZSH Theme"
      file:
        src: /root/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh-theme
        dest: /root/.oh-my-zsh/custom/themes/spaceship.zsh-theme
        state: link

    - name: "Copy .zshrc"
      copy:
        src: /root/.zshrc
        dest: /root/.zshrc
      when: ansible_connection != 'local'

    - name: "Check fzf Installed"
      stat:
        path: '/root/.fzf'
      register: fzf_installed
      changed_when: False

    - name: "Clone fzf"
      git:
        repo: 'https://github.com/junegunn/fzf.git'
        dest: /root/.fzf
        version: master
        depth: 1
      when: not fzf_installed.stat.exists

    - name: "Install fzf"
      command: /root/.fzf/install --all
      when: not fzf_installed.stat.exists

    - name: "Start/Enable qemu-guest-agent"
      systemd:
        name: qemu-ga
        state: started
        enabled: true
      when: ansible_distribution == 'Arch'

    - name: "Start/Enable fail2ban"
      systemd:
        name: fail2ban
        state: started
        enabled: true

    - name: "Copy .vimrc"
      copy:
        src: /root/.vimrc
        dest: /root/.vimrc
      when: ansible_connection != 'local'

    - name: "Create /docker/telegraf"
      file:
        path: /docker/telegraf
        state: directory

    - name: "Copy telegraf.conf"
      copy:
        src: /docker/telegraf/telegraf.conf
        dest: /docker/telegraf/telegraf.conf
      when: ansible_connection != 'local'

    - name: "Inject Hostname into /docker/telegraf/telegraf.conf"
      replace:
        path: /docker/telegraf/telegraf.conf
        regexp: "arch01"
        replace: "{{ inventory_hostname }}"
      when: ansible_connection != 'local'

    - name: "Configure/Start Telegraf Container"
      docker_container:
        name: telegraf
        image: telegraf:latest
        restart: yes
        restart_policy: unless-stopped
        env:
          HOST_PROC: "/host/proc"
        volumes:
          - /proc:/host/proc:ro
          - /var/run/docker.sock:/var/run/docker.sock
          - /docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
